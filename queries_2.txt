QUERIES GROUP BY

1. Contare quanti iscritti ci sono stati ogni anno
    SELECT COUNT(*) AS "studenti_iscritti", YEAR(`enrolment_date`) AS "anno"
    FROM `students`
    GROUP BY YEAR(`enrolment_date`);

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio
    SELECT COUNT(*) AS "totale_insegnanti", `office_address` AS "indirizzo_ufficio"
    FROM `teachers`
    GROUP BY `office_address`

3. Calcolare la media dei voti di ogni appello d'esame
    SELECT AVG(`vote`) AS "media_votI", `exam_id`   
    FROM `exam_student`
    GROUP BY `exam_id`

4. Contare quanti corsi di laurea ci sono per ogni dipartimento
    SELECT COUNT(*) AS "totale_corsi_di_laurea", `department_id` 
    FROM `degrees`
    GROUP BY `department_id`

____________________________________

QUERIES JOIN

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
    SELECT 
        `students`.`name` AS "student_name", 
        `students`.`surname` AS "student_surname"
    FROM `students`
    JOIN `degrees` ON `degrees`.`id`=`students`.`degree_id` 
    WHERE `degrees`.`name` = "Corso di Laurea in Economia"
    ORDER BY `students`.`surname` ASC;

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
    SELECT 
        `degrees`.`name`AS "laurea_magistrale", 
    FROM `degrees`
    JOIN `degrees` ON `departments`.`id` = `degrees`.`department_id`
    WHERE `degrees`.`level` = "magistrale" AND `departments`.`name` = "Dipartimento di Neuroscienze";   

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
   SELECT 
	`courses`.`name` AS "corso", 
	`courses`.`id` AS "id_corso"
    FROM `courses`
    
    -- creo un join sulla tabella ponte "course_teacher"
    JOIN `course_teacher` ON `courses`.`id` = `course_teacher`.`course_id`

    JOIN `teachers` ON `teachers`.`id` = `course_teacher`.`teacher_id`

    WHERE `teachers`.`name` = "Fulvio" AND `teachers`.`surname` = "Amato";
    -- meglio così
    WHERE `course_teacher`.`teacher_id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome
    SELECT 
        `students`.`id`, 
        `students`.`name`, 
        `students`.`surname`, 
        `students`.`degree_id`,
        `degrees`.`name` AS "corso_di_laurea",
        `departments`.`name` AS "dipartimento"

        FROM `students`
        
        JOIN `degrees` ON `degrees`.`id` = `students`.`degree_id`
        JOIN `departments` ON `departments`.`id` = `degrees`.`department_id`
        
        ORDER BY `students`.`surname`, `students`.`name` ASC;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
    SELECT 
        `degrees`.`id` AS "id_laurea",
        `degrees`.`name` AS "nome_corso_di_laurea",
        
        `courses`.`id` AS "id_corso",
        `courses`.`name` AS "nome_corso",
        
        `teachers`.`id` AS "id_docente",
        `teachers`.`name` AS "nome_docente",
        `teachers`.`surname` AS "cognome_docente"
        
    FROM `degrees`
    
    JOIN `courses` ON `degrees`.`id`=`courses`.`degree_id` 
    JOIN `course_teacher`  ON `courses`.`id`= `course_teacher`.`course_id`
    JOIN `teachers` ON `teachers`.`id`=`course_teacher`.`teacher_id`
    ORDER BY `degrees`.`name`;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
    SELECT 
            `teachers`.`id` AS "id_docente",
            `teachers`.`name` AS "nome_docente",
            `teachers`.`surname` AS "cognome_docente",
            `departments`.`name`AS "dipartimento"
            
        FROM `teachers`
        
        JOIN `course_teacher` ON `teachers`.`id`= `course_teacher`.`teacher_id`
        JOIN `courses`ON `course_teacher`.`course_id` = `courses`.`id`
        JOIN `degrees` ON `courses`.`degree_id`= `degrees`.`id`
        JOIN `departments` ON `degrees`.`department_id` = `departments`.`id`
        
        WHERE `departments`.`name`= "Dipartimento di Matematica"
        GROUP BY `teachers`.`id`;

7. BONUS: Selezionare per ogni studente quanti tentativi d’esame ha sostenuto per
superare ciascuno dei suoi esami 
  SELECT 
        `students`.`id` AS "id_studente",
        `students`.`name` AS "nome_studente",
        `students`.`surname` AS "cognome_studente",
        
         `exams`.`id` AS "id_esame",
         `courses`.`name` AS "esame",
        
        MAX(`exam_student`.`vote`) AS "ultimo_voto",
        COUNT(`exam_student`.`vote`) AS "appelli_sostenuti",
        
        IF(MAX(`exam_student`.`vote`) < 18, 'failed', 'passed') AS 'stato_esame'
        
    FROM `students`
    
    JOIN `exam_student` ON `students`.`id` = `exam_student`.`student_id`
    JOIN `exams` ON `exam_student`.`exam_id`= `exams`.`id`
    JOIN `courses` ON `exams`.`course_id` = `courses`.`id`
        
   GROUP BY `students`.`id`,`courses`.`name`
   HAVING MAX(`exam_student`.`vote`) >= 18
    
    ORDER BY `students`.`id` ,`courses`.`name`; 